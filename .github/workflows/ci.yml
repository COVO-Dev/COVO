name: CI/CD Pipeline

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  build-client:
    name: build-client
    runs-on: ubuntu-latest

    env: # Set environment variables for the client build
      NEXT_AWS_PUBLIC_PATH: covo-test2.s3.us-east-1.amazonaws.com
      IMAGE_HOSTNAME: s3.amazon.aws.com

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v3

      - name: 🧰 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 📥 Install client dependencies
        run: npm install
        working-directory: client

      - name: Restore Next.js cache
        uses: actions/cache@v3
        with:
          path: |
            client/.next/cache
          key: ${{ runner.os }}-next-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-
      
      - name: 🛠️ Build client
        run: npm run build
        working-directory: client

  build-server:
    name: build-server
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v3

      - name: 🧰 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 📥 Install server dependencies
        run: npm install
        working-directory: server

      - name: 🧪 TypeScript check
        run: npx tsc --noEmit
        working-directory: server

      - name: ✅ Run tests
        run: npm test
        working-directory: server
  deploy:
    name: 🚀 Deploy
    needs: [build-client, build-server]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main'

    steps:
      - name: 🚀 Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/covo-${{ github.ref_name }}
            git pull origin ${{ github.ref_name }}

            echo "📦 Installing backend dependencies..."
            cd server
            npm install
            npm run build

            echo "🔁 Restarting PM2 backend..."
            pm2 restart covo-${{ github.ref_name }} || PORT=${{ github.ref_name == 'main' && '3000' || '4000' }} pm2 start build/app.js --name covo-${{ github.ref_name }}

            echo "🌐 Building frontend..."
            cd ../client
            npm install
            npm run build

            echo "📁 Deploying frontend to web directory..."
            if [ "${{ github.ref_name }}" = "main" ]; then
              sudo rm -rf /var/www/covo-production
              sudo cp -r out /var/www/covo-production
            else
              sudo rm -rf /var/www/covo-staging
              sudo cp -r out /var/www/covo-staging
            fi
            echo "✅ Deployment complete!"
            